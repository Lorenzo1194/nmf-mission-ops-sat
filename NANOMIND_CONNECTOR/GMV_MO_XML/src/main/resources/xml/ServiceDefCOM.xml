<?xml version="1.0" encoding="UTF-8" standalone="no"?><mal:specification xmlns:mal="http://www.ccsds.org/schema/ServiceSchema" xmlns:com="http://www.ccsds.org/schema/COMSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <mal:area comment="This section details the Common Object Model area; the structures used by the service are detailed in section 4. The area and structures are defined in terms of the MO Message Abstraction Layer (MAL), so it is possible to deploy them over any supported protocol and message transport.&#10;" name="COM" number="2" version="129">
    <mal:service comment="An event is a specific object representing 'something that happens in the system at a given point in time'. The event service provides a generic mechanism for the distribution of events.&#10;An event is a special type of COM object and is identified by the normal object fields (domain, object type, and object instance identifier). &#10;It may also contain:&#10;&lt;ul&gt;&#10; &lt;li&gt;a link to a source object (that caused the event to be generated)&lt;/li&gt;&#10; &lt;li&gt;a link to a service specific related object&lt;/li&gt;&#10; &lt;li&gt;a body that is specific to the event type and whose data structure is defined by the service that declares the event.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;The event service only defines a single operation that supports the publishing of events and subscription of events generated by other components.&#10;Events are published with a MAL update type of DELETION. Events are something that happens at a given point in time, therefore they in themselves have no lifetime, they are created and deleted at the time instant in time. For efficiency purposes only the deletion update is used.&#10;" name="Event" number="1" xsi:type="com:ExtendedServiceType">
      <mal:capabilitySet number="1">
        <mal:pubsubIP comment="The monitorEvent operation allows a consumer to subscribe for events.&#10;" name="monitorEvent" number="1" supportInReplay="true">
          <mal:messages>
            <mal:publishNotify>
              <mal:field canBeNull="true" comment="The MAL::EntityKey.firstSubKey shall contain the event object number as a base 10 string. For example, for an object number of '14' the key value would be '14' with no padding.&#10;The MAL::EntityKey.secondSubKey shall contain the area, service, and version ObjectType fields as a MAL::Long populated as (in hex) 0xAAAASSSSVVXXXXXX where AAAA is the area (16 bits), SSSS is the service (16 bits), VV is the version (8 bits), and XXXXXX is unused and set to zero (24 bits). For example, for an area of '1', and a service of '2', and a version of '3' the field would contain (in hex) 0x0001000203000000.&#10;The MAL::EntityKey.thirdSubKey shall contain the event object instance identifier.&#10;The MAL::EntityKey.fourthSubKey shall contain the area, service, version and number fields of the event source ObjectType using same methodology as given for the second sub key but replacing the XXXXXX part with the number field.&#10;The related and source links of the event shall populate the ObjectDetails part of the publish/notify message.&#10;The body of the event shall populate the final part of the publish/notify message.&#10;The timestamp of the Event shall be taken from the publish message.&#10;An event in one domain may be generated by something in another domain therefore the domain of the event shall not be required to be the same domain as the source of the event.&#10;" name="eventLinks">
                <mal:type area="COM" list="false" name="ObjectDetails"/>
              </mal:field>
              <mal:field canBeNull="true" name="eventBody">
                <mal:type area="MAL" list="false" name="Element"/>
              </mal:field>
            </mal:publishNotify>
          </mal:messages>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <com:features>
        <com:objects comment="The event service may be used for the publishing and monitoring of COM events.&#10;The identification of the event shall follow the COM object rules.&#10;The COM object source link shall point to the object that caused the event to be generated unless stated otherwise by the defining service specification.&#10;The COM object related link shall be service and event type specific.&#10;When an event is published using the PUBLISH-SUBSCRIBE monitorEvent operation defined in the event service it shall be published with a MAL update type of DELETED.&#10;When an event is published, the COM object instance identifier shall be populated by the publisher.&#10;The object instance identifier should be unique for a domain and object type.&#10;An event may have an associated body that is published with it.&#10;The type and contents of the body of an event shall be specified in the defining service specification but must be a concrete type or an Attribute.&#10;&#10;"/>
        <com:archiveUsage comment="Each type of event is a separate COM object type and therefore may be stored in a COM archive.&#10;When a service implementation requires that the events it generates be persisted, upon event emission, the event shall be stored as normal.&#10;The related link is service specific and shall always be null if not explicitly used by a service.&#10;The source link shall point to the source object of the event.&#10;&#10;&#10;"/>
      </com:features>
    </mal:service>
    <mal:service comment="The Archive service provides a basic interface to a standard archiving function. It follows the basic CRUD principles and allows simple querying of the archive. It provides operations to add new objects to an archive, delete objects from an archive, update existing objects in an archive, and also query the content of the archive.&#10;The query operation provides a basic querying ability, allowing a consumer to filter on fields from the object headers (such as domain etc) and also filter on the body of the object if it uses the MAL data type specification.&#10;The query operation is extensible but the extensions would be outside this standard.&#10;Finally, a consumer of the archive can monitor it for changes by subscribing for archive events from the event service. Any change to the archive is published using the event service if it is supported by an implementation.&#10;&#10;" name="Archive" number="2" xsi:type="com:ExtendedServiceType">
      <mal:dataTypes>
        <mal:enumeration comment="The ExpressionOperator enumeration holds a set of possible expression operators.&#10;" name="ExpressionOperator" shortFormPart="5">
          <mal:item comment="Checks for equality." nvalue="1" value="EQUAL"/>
          <mal:item comment="Checks for difference (not equal)." nvalue="2" value="DIFFER"/>
          <mal:item comment="Checks for greater than." nvalue="3" value="GREATER"/>
          <mal:item comment="Checks for greater than or equal to.&#10;" nvalue="4" value="GREATER_OR_EQUAL"/>
          <mal:item comment="Checks for less than." nvalue="5" value="LESS"/>
          <mal:item comment="Checks for less than or equal to.&#10;" nvalue="6" value="LESS_OR_EQUAL"/>
          <mal:item comment="Case sensitive containment test (String types only)&#10;" nvalue="7" value="CONTAINS"/>
          <mal:item comment="Case insensitive containment test (String types only).&#10;" nvalue="8" value="ICONTAINS"/>
        </mal:enumeration>
        <mal:composite comment="The base structure for archive filters.&#10;" name="QueryFilter">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
        </mal:composite>
        <mal:composite comment="The ArchiveDetails structure is used to hold information about a single entry in an Archive.&#10;" name="ArchiveDetails" shortFormPart="1">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The object instance identifier of the archived object.&#10;" name="instId">
            <mal:type area="MAL" list="false" name="Long"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The details of the Object.&#10;" name="details">
            <mal:type area="COM" list="false" name="ObjectDetails"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The network zone of the object.&#10;" name="network">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The time at the object creation.&#10;" name="timestamp">
            <mal:type area="MAL" list="false" name="FineTime"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The component that created the object (a component may be anything from an onboard equipment to a software process on the ground).&#10;" name="provider">
            <mal:type area="MAL" list="false" name="URI"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The ArchiveQuery structure is used to specify filters on the common parts of an object in an archive.&#10;" name="ArchiveQuery" shortFormPart="2">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <mal:field canBeNull="true" comment="Only the objects whose domain matches the provided domain will be returned. The domain field supports the wildcard value of '*' only in the last part of the domain. If NULL then all domains shall be matched.&#10;" name="domain">
            <mal:type area="MAL" list="true" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional network zone. Only the objects whose network zone matches the provided value will be returned. If NULL then all values will be matched.&#10;" name="network">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional provider. Only the objects whose provider URI matches the provided provider URI will be returned. If NULL then all values will be matched.&#10;" name="provider">
            <mal:type area="MAL" list="false" name="URI"/>
          </mal:field>
          <mal:field canBeNull="false" comment="Object instance identifier of the related Object. Only the objects whose related Object matches the provided related Object will be returned unless the '0' wildcard value is supplied.&#10;" name="related">
            <mal:type area="MAL" list="false" name="Long"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional source. Only the objects whose source matches the provided source will be returned. The fields of the ObjectId may contain the wildcard values ('0' for numeric fields, '*' for Identifier fields). If NULL then all values will be matched. &#10;" name="source">
            <mal:type area="COM" list="false" name="ObjectId"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional start time. Only the objects whose timestamp is equal or greater than the provided start time will be returned. If NULL then no start time shall be applied.&#10;" name="startTime">
            <mal:type area="MAL" list="false" name="FineTime"/>
          </mal:field>
          <mal:field canBeNull="true" comment="Optional end time. Only the objects whose timestamp is equal or less than the provided end time will be returned. If NULL then no end time will be applied.&#10;" name="endTime">
            <mal:type area="MAL" list="false" name="FineTime"/>
          </mal:field>
          <mal:field canBeNull="true" comment="If set to TRUE then returned values shall be sorted in ascending order, if FALSE then in descending order. If NULL then no sorting shall be applied.&#10;" name="sortOrder">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="true" comment="If the returned values are to be sorted because the sortOrder field is not NULL then this field may contain the name of the field in the object body (MAL::Composite) to sort against. If the object body is not a composite but an Attribute or Enumeration then to sort on the values an empty string of &quot;&quot; should be used. Enumerations are sorted on their ordinal. If this field is NULL then the objects shall be sorted on the COM object timestamp. The field follows the naming convention of CompositeFilter::fieldName. If the field points to a composite, list, abstract type (including Attribute) or Blob then no sorting shall be applied.&#10;" name="sortFieldName">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The CompositeFilter allows an archive query to specify a filter based on the content of the body of an object if that body is specified using the MAL data type specification.&#10;" name="CompositeFilter" shortFormPart="3">
          <mal:field canBeNull="false" comment="The name of the field in the object body (MAL::Composite) to match against. It is specified by referring to the name of the field. If the field does not exist in the Composite then the filter shall evaluate to false. If the field is nested inside another Composite, it can be referenced by separating the field names by a '.' character; for example the field 'instId' or the source of an ArchiveDetails composite would be referenced using &quot;details.source.key.instId&quot;. If the body is not a Composite but an Attribute or Enumeration then it can be referred to by using a blank (&quot;&quot;) string value here. Accessing values from lists is not supported by this method.&#10;" name="fieldName">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The type of the filter to apply.&#10;" name="type">
            <mal:type area="COM" list="false" name="ExpressionOperator" service="Archive"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The value to compare with. The type of the suppied value and the matched field mst be the same. Must not contain NULL for expression operators CONTAINS, ICONTAINS, GREATER, GREATER_OR_EQUAL, LESS, or LESS_OR_EQUAL otherwise an INVALID error should be returned. Must contain a UInteger ordinal value if the field being matched is an Enumeration. Blob fields can only be used with EQUAL/DIFFER. Must contain a String value if operator is CONTAINS or ICONTAINS otherwise an INVALID error should be returned.&#10;" name="fieldValue">
            <mal:type area="MAL" list="false" name="Attribute"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="Contains a list of CompositeFilters that are AND'd together to form a more complex filter.&#10;" name="CompositeFilterSet" shortFormPart="4">
          <mal:extends>
            <mal:type area="COM" list="false" name="QueryFilter" service="Archive"/>
          </mal:extends>
          <mal:field canBeNull="false" comment="The list of filters to apply.&#10;" name="filters">
            <mal:type area="COM" list="true" name="CompositeFilter" service="Archive"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:events comment="For each stored object, an 'ObjectStored' event may be published to the event service.&#10;For each updated object, an 'ObjectUpdated' event may be published to the event service.&#10;For each deleted object, an 'ObjectDeleted' event may be published to the event service.&#10;The source link of the generated events shall link to the object being stored/updated/deleted.&#10;Archive service events shall be persisted silently in order not to trigger an infinite event loop.&#10;&#10;">
          <com:event comment="For each stored object, an event of type 'ObjectStored' may be published to the event service.&#10;" name="ObjectStored" number="1">
            <com:sourceObject comment="The Object source is the newly stored object.&#10;"/>
          </com:event>
          <com:event comment="For each updated object, an event of type 'ObjectUpdated' may be published to the event service.&#10;" name="ObjectUpdated" number="2">
            <com:sourceObject comment="The Object source is the updated object.&#10;"/>
          </com:event>
          <com:event comment="For each deleted object, an event of type 'ObjectDeleted' may be published to the event service.&#10;" name="ObjectDeleted" number="3">
            <com:sourceObject comment="The Object source is the deleted object.&#10;"/>
          </com:event>
        </com:events>
      </com:features>
    </mal:service>
    <mal:service comment="The activity tracking service provides the ability to monitor the progress of activities; an activity is anything that has a measurable period of time (a command, a remote procedure, a schedule etc). It defines an event pattern that supports the monitoring of activities from the initial consumer request, tracking its progress across a transport link, to reception by the provider and execution in that provider.&#10;&#10;" name="ActivityTracking" number="3" xsi:type="com:ExtendedServiceType">
      <mal:dataTypes>
        <mal:composite comment="The structure holds details for a Release, Reception, or Forward event of an activity.&#10;" name="ActivityTransfer" shortFormPart="1">
          <mal:field canBeNull="false" comment="The success result of this stage, TRUE if successful, FALSE otherwise. If this is TRUE then the next two fields should be populated.&#10;" name="success">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="true" comment="The estimated amount of time it will take to be received by the next destination if Release or Forward. Contains the estimated amount of time it will take to be forwarded by this relay if Reception event. May be NULL if unknown or cannot be calculated.&#10;" name="estimateDuration">
            <mal:type area="MAL" list="false" name="Duration"/>
          </mal:field>
          <mal:field canBeNull="true" comment="This contains the URI of the next destination, either another relay or the provider. It is protocol specific how this value is derived.&#10;" name="nextDestination">
            <mal:type area="MAL" list="false" name="URI"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The structure is used to hold details of an Acceptance event.&#10;" name="ActivityAcceptance" shortFormPart="2">
          <mal:field canBeNull="false" comment="The success result of this stage, TRUE if successful, FALSE otherwise.&#10;" name="success">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The structure is used to report the execution status of an activity in the final destination.&#10;" name="ActivityExecution" shortFormPart="3">
          <mal:field canBeNull="false" comment="The success result of this stage, TRUE if successful, FALSE otherwise.&#10;" name="success">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The execution stage of the operation.&#10;" name="executionStage">
            <mal:type area="MAL" list="false" name="UInteger"/>
          </mal:field>
          <mal:field canBeNull="false" comment="The total number of execution stages that will be reported.&#10;" name="stageCount">
            <mal:type area="MAL" list="false" name="UInteger"/>
          </mal:field>
        </mal:composite>
        <mal:composite comment="The OperationActivity structure contains the details of a MAL operation activity.&#10;" name="OperationActivity" shortFormPart="4">
          <mal:field canBeNull="false" comment="The interaction type of the original operation message header.&#10;" name="interactionType">
            <mal:type area="MAL" list="false" name="InteractionType"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The activity tracking service may be used for the monitoring of MAL operations.&#10;A MAL implementation must populate the transaction identifier for SEND interactions if the activity tracking service is to be used.&#10;If a MAL operation is using the activity tracking service, when the interaction is started, the consumer shall populate and archive an OperationActivity object.&#10;The OperationActivity object shall use the transaction identifier of the MAL operation for its object instance identifier.&#10;The OperationActivity object shall use the domain of the MAL operation for its domain.&#10;All Activity events for the interaction shall link to the OperationActivity object using their source link where the object instance identifier to use is the MAL interaction transaction identifier.&#10;If a relay node is unable to relay the operation then that relay shall fail the MAL interaction that the consumer initiated as well as generate the correct activity event.&#10;The executionStage field of the Execution event structure shall hold the current execution stage of the activity.&#10;For SUBMIT, INVOKE, and PROGRESS interactions the ACKNOWLEDGE stage shall have an execution stage value of '1'.&#10;For REQUEST interactions the RESPONSE stage shall have an execution stage value of '1'.&#10;For PROGRESS interactions the execution stage value for the PROGRESS updates shall start at '2' and increate for each update sent.&#10;For PROGRESS interactions the execution stage value for the RESPONSE shall be the total number of PROGRESS updates plus '2'.&#10;The stageCount field of the Execution event structure shall be populated from the stage count row of Table 2-1.&#10;">
          <com:object name="OperationActivity" number="6">
            <com:objectType>
              <mal:type area="COM" list="false" name="OperationActivity" service="ActivityTracking"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="The activity tracking service shall use the event service for the monitoring of activities being transferred from a consumer to a provider and also for execution in the provider.&#10;A Release event shall be generated when an activity is released from a consumer.&#10;A Reception event shall be generated when an activity is received by an intermediate relay.&#10;A Forward event shall be generated when an activity is released from an intermediate relay.&#10;An Acceptance event shall be generated when an activity is received by the destination provider.&#10;Reception and Forward events shall only be used in a multi-hop activity transfer.&#10;For Reception and Forward events, the source URI in the UpdateHeader of the published event shall contain the URI of the relay. It is protocol specific how this value is derived.&#10;Execution progress of an activity shall be reported using Execution events.&#10;The Execution event may be reported many times as it is used to report each stage in the execution of the activity.&#10;&#10;">
          <com:event comment="A Release event is release from source consumer.&#10;" name="Release" number="1">
            <com:objectType>
              <mal:type area="COM" list="false" name="ActivityTransfer" service="ActivityTracking"/>
            </com:objectType>
            <com:sourceObject comment="The activity being monitored is the source of the event.&#10;"/>
          </com:event>
          <com:event comment="A Reception event is reception by an intermediate relay.&#10;" name="Reception" number="2">
            <com:objectType>
              <mal:type area="COM" list="false" name="ActivityTransfer" service="ActivityTracking"/>
            </com:objectType>
            <com:sourceObject comment="The activity being monitored is the source of the event.&#10;"/>
          </com:event>
          <com:event comment="A Forward event is release from an intermediate relay.&#10;" name="Forward" number="3">
            <com:objectType>
              <mal:type area="COM" list="false" name="ActivityTransfer" service="ActivityTracking"/>
            </com:objectType>
            <com:sourceObject comment="The activity being monitored is the source of the event.&#10;"/>
          </com:event>
          <com:event comment="An Acceptance event is reception and acceptance by the destination provider.&#10;" name="Acceptance" number="4">
            <com:objectType>
              <mal:type area="COM" list="false" name="ActivityAcceptance" service="ActivityTracking"/>
            </com:objectType>
            <com:sourceObject comment="The activity being monitored is the source of the event.&#10;"/>
          </com:event>
          <com:event comment="An Execution event is execution progress reporting by the destination provider.&#10;" name="Execution" number="5">
            <com:objectType>
              <mal:type area="COM" list="false" name="ActivityExecution" service="ActivityTracking"/>
            </com:objectType>
            <com:sourceObject comment="The activity being monitored is the source of the event.&#10;"/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="The events generated as part of the activity monitoring pattern may be persisted in a COM archive.&#10;If the activity events are being persisted then the objects that represent the activities (such as an OperationActivity object) should also be persisted.&#10;&#10;"/>
      </com:features>
    </mal:service>
    <mal:dataTypes>
      <mal:composite comment="The ObjectType structure uniquely identifies the type of an object. It is the combination of the area number, service number, area version, and service object type number. The combined parts are able to fit inside a MAL::Long (for implementations that prefer to index on a single numeric field rather than a structure).&#10;" name="ObjectType" shortFormPart="1">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="false" comment="Area Number where the object type is defined. Must not be '0' for values as this is the wildcard.&#10;" name="area">
          <mal:type area="MAL" list="false" name="UShort"/>
        </mal:field>
        <mal:field canBeNull="false" comment="Service Number of the service where the object type is defined. Must not be '0' for values as this is the wildcard.&#10;" name="service">
          <mal:type area="MAL" list="false" name="UShort"/>
        </mal:field>
        <mal:field canBeNull="false" comment="Area Version of the service where the object type is defined. Must not be '0' for values as this is the wildcard.&#10;" name="version">
          <mal:type area="MAL" list="false" name="UOctet"/>
        </mal:field>
        <mal:field canBeNull="false" comment="The service specific object number. Must not be '0' for values as this is the wildcard.&#10;" name="number">
          <mal:type area="MAL" list="false" name="UShort"/>
        </mal:field>
      </mal:composite>
      <mal:composite comment="The ObjectKey structure combines a domain and an object instance identifier such that it identifies the instance of an object for a specific domain.&#10;" name="ObjectKey" shortFormPart="2">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="false" comment="The domain of the object instance.&#10;" name="domain">
          <mal:type area="MAL" list="true" name="Identifier"/>
        </mal:field>
        <mal:field canBeNull="false" comment="The unique identifier of the object instance. Must not be '0' for values as this is the wildcard.&#10;" name="instId">
          <mal:type area="MAL" list="false" name="Long"/>
        </mal:field>
      </mal:composite>
      <mal:composite comment="The ObjectId structure combines an object type and an object key such that it identifies the instance and type of an object for a specific domain.&#10;" name="ObjectId" shortFormPart="3">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="false" comment="The fully qualified unique identifier of the type.&#10;" name="type">
          <mal:type area="COM" list="false" name="ObjectType"/>
        </mal:field>
        <mal:field canBeNull="false" comment="The combination of the object domain and object instance identifier.&#10;" name="key">
          <mal:type area="COM" list="false" name="ObjectKey"/>
        </mal:field>
      </mal:composite>
      <mal:composite comment="The ObjectDetails type is used to hold the extra information associated with an object instance, namely the related and source links.&#10;" name="ObjectDetails" shortFormPart="4">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="true" comment="Contains the object instance identifier of a related object (e.g. the ActionDefinition that an Action uses). This is service specific. The ObjectType of the related object is specified in the service specification. The related object must exist in the same domain as this object.&#10;" name="related">
          <mal:type area="MAL" list="false" name="Long"/>
        </mal:field>
        <mal:field canBeNull="true" comment="An object which is at the origin of the object creation (e.g. the procedure from which an action was triggered).&#10;" name="source">
          <mal:type area="COM" list="false" name="ObjectId"/>
        </mal:field>
      </mal:composite>
      <mal:composite comment="Simple pair of an object instance identifier and a Boolean value.&#10;" name="InstanceBooleanPair" shortFormPart="5">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <mal:field canBeNull="false" comment="The object instance identifier.&#10;" name="id">
          <mal:type area="MAL" list="false" name="Long"/>
        </mal:field>
        <mal:field canBeNull="false" comment="An associated Boolean value.&#10;" name="value">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
      </mal:composite>
    </mal:dataTypes>
    <mal:errors>
      <mal:error comment="Operation specific" name="INVALID" number="70000"/>
      <mal:error comment="Operation specific&#10;" name="DUPLICATE" number="70001"/>
    </mal:errors>
  </mal:area>
</mal:specification>